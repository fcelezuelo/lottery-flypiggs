{"version":3,"sources":["contexts/SortContext.tsx","assets/images/logo.png","pages/Home.tsx","assets/images/flypiggstext.png","components/Card.tsx","assets/images/fogos.gif","components/Alert.tsx","pages/NewSort.tsx","App.tsx","index.tsx"],"names":["SortContext","createContext","SortContextProvider","children","useState","state","setState","Provider","value","Home","history","useHistory","useContext","setSort","participants","setParticipants","sortName","setSortName","event","a","preventDefault","Swal","fire","icon","title","text","showConfirmButton","showCloseButton","name","push","id","src","logoImg","alt","className","onSubmit","onChange","target","placeholder","type","Card","entries","avatar","defaultAvatar","Alert","Fires","MySwal","withReactContent","NewSort","sort","profiles","setProfiles","totalEntries","setTotalEntries","participantsParsed","setParticipantsParsed","getAvatar","useCallback","split","single","params","forEach","entry","trim","includes","substr","length","axios","get","headers","data","object","users","reduce","obj","item","display_name","toLowerCase","logo","useEffect","undefined","participantsArray","singleParticipants","participantArray","result","map","singleParticipant","toLocaleLowerCase","filter","x","to","onClick","winnerKey","Math","floor","random","winner","html","showCancelButton","background","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f1cfa29.chunk.js","sourcesContent":["import { createContext, ReactNode, useState } from 'react';\r\n\r\ntype Sort = {\r\n  name?: string;\r\n  participants?: string;\r\n}\r\n\r\ntype SortContext = [Sort, React.Dispatch<React.SetStateAction<Sort>>]\r\n\r\ntype SortContextProviderProps = {\r\n  children: ReactNode;\r\n}\r\n\r\n// export const SortContext = createContext<SortContext>([{} as Sort, () => { }]);\r\nexport const SortContext = createContext<SortContext>([{}, () => { }]);\r\n\r\nexport function SortContextProvider({ children }: SortContextProviderProps) {\r\n  // const [state, setState] = useState({} as Sort);\r\n  const [state, setState] = useState({});\r\n\r\n  return (\r\n    <SortContext.Provider value={[state, setState]}>\r\n      {children}\r\n    </SortContext.Provider>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/logo.dc126ffe.png\";","import { FormEvent, useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { SortContext } from '../contexts/SortContext';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport logoImg from '../assets/images/logo.png';\r\n\r\nimport '../styles/home.scss';\r\n\r\nexport function Home() {\r\n  const history = useHistory();\r\n\r\n  const [, setSort] = useContext(SortContext);\r\n\r\n  const [participants, setParticipants] = useState('');\r\n  const [sortName, setSortName] = useState('');\r\n  // const [sortDate, setSortDate] = useState('');\r\n  // const [profile, setProfile] = useState([{}]);\r\n\r\n  async function handleCreateSort(event: FormEvent) {\r\n    event.preventDefault();\r\n\r\n    if (sortName === '' || participants === '') {\r\n      Swal.fire({\r\n        icon: 'warning',\r\n        title: 'Atenção',\r\n        text: 'Preencha o nome do sorteio e os participantes.',\r\n        showConfirmButton: false,\r\n        showCloseButton: true,\r\n      })\r\n      return;\r\n    }\r\n\r\n    // await getAvatar(participants)\r\n\r\n    setSort({ name: sortName, participants: participants });\r\n    history.push('/newSort');\r\n  }\r\n\r\n  return (\r\n    <div id=\"page-home\">\r\n      <header>\r\n        <div>\r\n          <img src={logoImg} alt=\"Lottery FlyPiggs\" />\r\n          <span>FLYPIGGS</span>\r\n        </div>\r\n\r\n        {/* <div>\r\n          <a href=\"https://id.twitch.tv/oauth2/authorize?client_id=o2ie168kex5r4s6o0xpee997ch8obk&redirect_uri=http://localhost:3000&response_type=token&scope=viewing_activity_read\">login</a>\r\n        </div> */}\r\n      </header>\r\n\r\n      <main>\r\n        <div className=\"main-title\">\r\n\r\n          <h1>\r\n            Criar Sorteio\r\n          </h1>\r\n\r\n          <form onSubmit={handleCreateSort}>\r\n            <input\r\n              onChange={event => setSortName(event.target.value)}\r\n              placeholder=\"Nome do sorteio\"\r\n            />\r\n            {/* <input\r\n              type='Date'\r\n              onChange={event => setSortDate(event.target.value)}\r\n              placeholder=\"Data do sorteio\"\r\n            /> */}\r\n            <textarea\r\n              onChange={event => setParticipants(event.target.value)}\r\n              placeholder=\"Adicionar os participantes ao sorteio\"\r\n            />\r\n\r\n            <button type='submit'>Criar Sorteio</button>\r\n          </form>\r\n\r\n        </div>\r\n      </main>\r\n      <footer>FLYPIGGS - Copyright © 2021</footer>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/flypiggstext.dc2a8b9c.png\";","import defaultAvatar from '../assets/images/flypiggstext.png';\r\n\r\nimport '../styles/card.scss';\r\n\r\ntype User = {\r\n  key: string;\r\n  name: string;\r\n  entries: number;\r\n  avatar?: string;\r\n}\r\n\r\nexport function Card({ name, entries, avatar }: User) {\r\n  return (\r\n    <div className=\"card\" >\r\n      <div>\r\n        <img src={avatar || defaultAvatar} alt=\"avatar\" />\r\n        <h2>{name}</h2>\r\n      </div>\r\n      <span>{entries > 1 ? 'Entradas' : 'Entrada'}: {entries}</span>\r\n    </div>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/fogos.80e8fd2b.gif\";","import Fires from '../assets/images/fogos.gif';\r\nimport defaultAvatar from '../assets/images/flypiggstext.png';\r\n\r\nimport '../styles/alert.scss';\r\n\r\ntype AlertProps = {\r\n  name: string;\r\n  avatar: string;\r\n}\r\n\r\nexport function Alert({ name, avatar }: AlertProps) {\r\n  return (\r\n    <div id=\"alert\">\r\n      <img src={Fires} alt=\"fogos\" />\r\n      <strong>Vencedor</strong>\r\n      <img className=\"avatar-winner\" src={avatar || defaultAvatar} alt={name} />\r\n      <span>{name}</span><br />\r\n    </div>\r\n  );\r\n}","import { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nimport axios from 'axios';\r\n\r\nimport { Card } from '../components/Card';\r\nimport { Alert } from '../components/Alert';\r\nimport logoImg from '../assets/images/logo.png';\r\n\r\nimport '../styles/new-sort.scss';\r\nimport { SortContext } from '../contexts/SortContext';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\ntype ParticipantsParsed = {\r\n  name: string;\r\n  entries: number;\r\n  avatar: string;\r\n}[]\r\n\r\nexport function NewSort() {\r\n  const [sort] = useContext(SortContext);\r\n  const [profiles, setProfiles] = useState<any>(null)\r\n\r\n  const history = useHistory();\r\n\r\n  const [participants, setParticipants] = useState<string>('');\r\n  const [totalEntries, setTotalEntries] = useState(0);\r\n  const [participantsParsed, setParticipantsParsed] = useState<ParticipantsParsed>([]);\r\n\r\n  const getAvatar = useCallback(async () => {\r\n    const entries = sort.participants?.split(',');\r\n    const single: string[] = []\r\n    let params = '';\r\n    entries?.forEach(entry => {\r\n      entry = entry.trim();\r\n      if (!single.includes(entry)) {\r\n        single.push(entry);\r\n        params += `${entry},`\r\n      }\r\n    })\r\n\r\n    params = params.substr(0, params.length - 1);\r\n\r\n    const { data } = await axios.get(`https://api.twitch.tv/kraken/users?login=${params}`, {\r\n      headers: {\r\n        'Client-ID': 'o2ie168kex5r4s6o0xpee997ch8obk',\r\n        'Accept': 'application/vnd.twitchtv.v5+json'\r\n      }\r\n    });\r\n    const object = data.users.reduce((obj: any, item: any) => ((obj[item.display_name.toLowerCase()] = { avatar: item.logo, display_name: item.display_name }), obj), {});\r\n    setProfiles(object);\r\n  }, [])\r\n  // }, [sort.participants])\r\n\r\n  useEffect(() => {\r\n    setParticipants(sort.participants ? sort.participants : '');\r\n    getAvatar();\r\n  }, [])\r\n  // }, [getAvatar,sort.participants])\r\n\r\n  useEffect(() => {\r\n    if (sort.name === undefined || sort.participants === undefined) {\r\n      history.push('/');\r\n      return;\r\n    } else if (sort.name === '' || sort.participants === '') {\r\n      history.push('/');\r\n\r\n      Swal.fire({\r\n        icon: 'warning',\r\n        title: 'Atenção',\r\n        text: 'Preencha o nome do sorteio e os participantes.',\r\n        showConfirmButton: false,\r\n        showCloseButton: true,\r\n      })\r\n      return;\r\n    }\r\n\r\n    if (profiles) {\r\n      const participantsArray = participants.split(',');\r\n      const singleParticipants: string[] = [];\r\n\r\n      setTotalEntries(participantsArray.length);\r\n\r\n      // participantsArray.filter(participantArray => {\r\n      participantsArray.forEach(participantArray => {\r\n        participantArray = participantArray.trim();\r\n        if (!singleParticipants.includes(participantArray)) {\r\n          singleParticipants.push(participantArray);\r\n        }\r\n      })\r\n\r\n      const result = singleParticipants.map(singleParticipant => {\r\n        if (profiles[`${singleParticipant.toLocaleLowerCase()}`] === undefined) {\r\n          return {\r\n            name: singleParticipant,\r\n            entries: (participantsArray.filter(x => x === singleParticipant).length),\r\n            avatar: ''\r\n          };\r\n        } else {\r\n          return {\r\n            name: profiles[`${singleParticipant.toLocaleLowerCase()}`].display_name,\r\n            entries: (participantsArray.filter(x => x === singleParticipant).length),\r\n            avatar: profiles[`${singleParticipant.toLocaleLowerCase()}`].avatar\r\n          };\r\n        }\r\n      });\r\n\r\n      setParticipantsParsed(result);\r\n    }\r\n\r\n    }, [participants, sort.name, sort.participants, history, profiles])\r\n  // }, [participants, profiles])\r\n\r\n  function handleGetWinner() {\r\n    const participantsArray = participants.split(',');\r\n    const winnerKey: number = Math.floor(Math.random() * participantsArray.length)\r\n\r\n    const winner = {\r\n      name: '',\r\n      avatar: ''\r\n    }\r\n\r\n    if (profiles) {\r\n      if (profiles[`${participantsArray[winnerKey].toLocaleLowerCase()}`] === undefined) {\r\n        winner.name = participantsArray[winnerKey];\r\n        winner.avatar = '';\r\n      } else {\r\n        winner.name = profiles[`${participantsArray[winnerKey].toLocaleLowerCase()}`].display_name;\r\n        winner.avatar = profiles[`${participantsArray[winnerKey].toLocaleLowerCase()}`].avatar;\r\n      }\r\n      MySwal.fire({\r\n        html: <Alert\r\n          name={winner.name}\r\n          avatar={winner.avatar}\r\n        />,\r\n        showConfirmButton: false,\r\n        showCancelButton: false,\r\n        background: 'transparent',\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"page-new-sort\">\r\n      <header>\r\n        <div>\r\n          <img src={logoImg} alt=\"Lottery FlyPiggs\" />\r\n          <span>FLYPIGGS</span>\r\n        </div>\r\n        <div>\r\n          <Link className=\"navbar-button\" to=\"/\">Novo Sorteio</Link>\r\n        </div>\r\n      </header>\r\n\r\n      <main>\r\n        <div className=\"main-title\">\r\n          <div>\r\n            <span>{participantsParsed.length > 1 ? 'Participantes' : 'Participante'}: <strong>{participantsParsed.length}</strong></span>\r\n            <span>{totalEntries > 1 ? 'Entradas' : 'Entrada'}: <strong>{totalEntries}</strong></span>\r\n          </div>\r\n\r\n          <div className=\"sort-name\">\r\n            <h1>{sort.name}</h1>\r\n            {/* <span>{sort.date}</span> */}\r\n          </div>\r\n\r\n          <div className=\"main-controller\">\r\n            <button onClick={handleGetWinner}>Sortear</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"main-content\">\r\n\r\n          {participantsParsed.map(({ name, entries, avatar }) => {\r\n            return (\r\n              <Card\r\n                key={name}\r\n                name={name}\r\n                entries={entries}\r\n                avatar={avatar}\r\n              />\r\n            );\r\n          })}\r\n\r\n        </div>\r\n      </main>\r\n      <footer>FLYPIGGS - Copyright © 2021</footer>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport { Home } from \"./pages/Home\";\nimport { NewSort } from \"./pages/NewSort\";\n\nimport { SortContextProvider } from './contexts/SortContext';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <SortContextProvider>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/newSort\" component={NewSort} />\n        </Switch>\n      </SortContextProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './styles/global.scss';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}